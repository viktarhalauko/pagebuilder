<?php

namespace App\Importer1C\Import;

use App\Category;
use Illuminate\Support\Facades\Date;
use Illuminate\Support\Facades\Log;
use phpDocumentor\Reflection\Types\Iterable_;
use SebastianBergmann\FileIterator\Iterator;

/**
 * Class CategoryImporter
 * @package App\Importer1C\Import
 */
class CategoryImporter extends AbstractImporter
{
    /**
     * @param $index
     * @param array $row
     * @param $created_id
     * @return int
     */
    function importRow($index, array $row, &$created_id)
    {
        /** @var Category $category */
        /** @var Category $parent_cat */

        try{
            $category = Category::firstOrNew(['import_id' => $row['ИД']]);
            $parent_cat = Category::where('import_id', $row['ИдРодитель'])->first();
            $category->import_id = $row['ИД'];
            $category->title = $row['Наименование'];
            $category->parent_id = $parent_cat ? $parent_cat->id : null;
            $category->deleted_at = $row['Удалено'] == 'True' ? Date::now() : null;
            $category->active =  (!$category->active)?0:($category->deleted_at == null);
            $category->width =  $row['Ширина'];
            $category->height =  $row['Длина'];
            $category->depth =  $row['Высота'];
            $category->weight = $row['Вес'];
            $category->save();
            $created_id = $category->id;
        }catch (\Exception $e){
            return self::IMPORT_ROW_ERROR;
        }
        return $category->wasRecentlyCreated ? self::IMPORT_ROW_CREATED : self::IMPORT_ROW_UPDATED;
    }


    /**
     * @return bool
     */
    protected function before()
    {
        return parent::before(); // TODO: Change the autogenerated stub
    }

    /**
     * @param $index
     * @param $row
     * @return iterable|null
     */
    protected function getDepends($index, $row): ?iterable
    {

        if(!empty($row['ИдРодитель'])){
            $this->logger->info("Импорт зависимостей для записи №$index");
            $parents = $this->data->where('ИД', $row['ИдРодитель']);
            return $parents;
        }
        return null;
    }
}